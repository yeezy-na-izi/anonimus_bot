from main import *
from .keyboards import *
import telebot
from .connect_with_users import *
from .DataBases import *

bot = telebot.TeleBot('1467056746:AAEGEMZV_XJpJAZjM0mffj3DdeG4RBpJe3I')

set_profile = dict()
error_sl = dict()
bog_mes = dict()


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–≠—Ç–æ –ª—É—á—à–∏–π –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –±–æ—Ç –≤ –º–∏—Ä–µ!\n'
                                      '–ù–∞–ø–∏—à–∏ /help —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞!',
                     reply_markup=main_keyboard)


@bot.message_handler(commands=['help'])
def help_commands(message):
    helper(message)


@bot.message_handler(regexp='‚ùî –ü–æ–º–æ—â—å')
def help_message(message):
    helper(message)


@bot.message_handler(regexp='üõ† Error')
def error_mes(message):
    bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ–≥—É (–∞–¥–º–∏–Ω—É)?')
    error_sl[message.chat.id] = True


@bot.message_handler(regexp='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥')
def go_back(message):
    bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥', reply_markup=main_keyboard)


# profile commands
@bot.message_handler(regexp='üë§ –ü—Ä–æ—Ñ–∏–ª—å')
def profile_message(message):
    z = prof_show(message.chat.id)
    if len(z) > 0:
        bot.send_message(message.chat.id, f'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n'
                                          f'–í–∞—à–µ –∏–º—è: {z[0]}\n'
                                          f'–í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è: {z[1]}\n'
                                          f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ: {z[2]}\n'
                                          f'–í–∞—à –ø–æ–ª: {"–ú—É–∂—Å–∫–æ–π" if z[3] == "True" else "–ñ–µ–Ω—Å–∫–∏–π"}',
                         reply_markup=profile_keyboard)
    else:
        bot.send_message(message.chat.id, '–í—ã –µ—â–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å', reply_markup=profile_keyboard)


@bot.message_handler(regexp='üîÑ –ó–∞–Ω–æ–≤–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')
def save_profile(message):
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –∏–º—è')
    set_profile[message.chat.id] = [False, True, True, True]


# chat commands
@bot.message_handler(regexp='üòú –ù–∞–π—Ç–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
def re_find_people_message(message):
    find_people(message)


@bot.message_handler(regexp='üòú –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
def find_people_message(message):
    find_people(message)


@bot.message_handler(regexp='‚õî –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥–∏')
def stop_chat(message):
    bot.send_message(message.chat.id, '–í—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏ –¥–∏–∞–ª–æ–≥–∏', reply_markup=main_keyboard)


@bot.message_handler(content_types=['text'])
def text_message(message):
    if message.chat.id in set_profile:
        if not set_profile[message.chat.id][0]:
            if message.text.count(' ') == 0:
                set_profile[message.chat.id][0] = message.text
                set_profile[message.chat.id][1] = False
                bot.delete_message(message.chat.id, message.message_id - 1)
                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é')
            else:
                bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –∏–º—è –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º')
                save_profile(message)
        elif not set_profile[message.chat.id][1]:
            if message.text.count(' ') == 0:
                set_profile[message.chat.id][1] = message.text
                bot.delete_message(message.chat.id, message.message_id - 1)
                bot.delete_message(message.chat.id, message.message_id)
                set_profile[message.chat.id][2] = False
                bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ (–º–µ–Ω–µ–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤)')
            else:
                bot.send_message(message.chat.id, '–§–∞–º–∏–ª–∏—é –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º, –∏–∑–≤–∏–Ω–∏—Ç–µ')
                bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é')
        elif not set_profile[message.chat.id][2]:
            if len(message.text) < 1000:
                set_profile[message.chat.id][2] = message.text
                bot.delete_message(message.chat.id, message.message_id - 1)
                bot.delete_message(message.chat.id, message.message_id)
                set_profile[message.chat.id][3] = False
                bot.send_message(message.chat.id, '–í–∞—à –ø–æ–ª', reply_markup=gender_keyboard)
            else:
                bot.send_message(message.chat.id,
                                 '–Ø –°–ö–ê–ó–ê–õ –ù–ï –ë–û–õ–ï–ï 1000 –°–ò–ú–í–û–õ–û–í, –¢–ï–ë–ï –ù–ê –ö–ò–¢–ê–ô–°–ö–û–ú –ù–ê–ü–ò–°–ê–¢–¨? –ù–ê:ÂçÉ ÊñáÂ≠ó‰ª•‰∏ã –¢–ê–ö –ü–û–ù–Ø–¢–ù–û, –°–£–ö–ê?')
                bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –¥—É—Ä–∞')
    if message.chat.id in error_sl:
        if error_sl[message.chat.id]:
            send_analytic(message, 'anonimus_chat_bot')
            bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', reply_markup=main_keyboard)
            error_sl[message.chat.id] = False
    if message.chat.id in bog_mes:
        if bog_mes[message.chat.id][0]:
            try:
                bot.send_message(bog_mes[message.chat.id][1], message.text)
                bog_mes[message.chat.id] = [False, False]
                bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ')
            except:
                bot.send_message(message.chat.id, '–°–æ—Ä—è–Ω, —è —Å–ª–∏—à–æ–∫–º —Å–ª–∞–± —á—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å')


@bot.callback_query_handler(func=lambda call: True)
def callbacks(call):
    if 'gender' in call.data:
        if call.data == 'gender.man':
            set_profile[call.message.chat.id][3] = True
        else:
            set_profile[call.message.chat.id][3] = False
        bot.delete_message(call.message.chat.id, call.message.message_id)
        bot.send_message(call.message.chat.id, f'–°–æ—Ö—Ä–∞–Ω–∏—Ç—å?\n'
                                               f'–í–∞—à–µ –∏–º—è: {set_profile[call.message.chat.id][0]}\n'
                                               f'–í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è: {set_profile[call.message.chat.id][1]}\n'
                                               f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ: {set_profile[call.message.chat.id][2]}\n'
                                               f'–í–∞—à –ø–æ–ª: '
                                               f'{"–ú—É–∂—Å–∫–æ–π" if set_profile[call.message.chat.id][3] else "–ñ–µ–Ω—Å–∫–∏–π"}',
                         reply_markup=edit_profile_key)
    elif call.data == 'bog':
        bog_mes[call.message.chat.id] = [True, int(call.message.text.split('\n')[2][3:])]
        bot.send_message(call.message.chat.id, '–ù–∞–ø–∏—à–∏ —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
    elif 'prof' in call.data:
        if 'yes' in call.data:
            data_add_users(set_profile[call.message.chat.id], call.message.chat.id)
            bot.delete_message(call.message.chat.id, call.message.message_id)
            bot.send_message(call.message.chat.id, "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ...")
        else:
            bot.send_message(call.message.chat.id, '–í—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É?')
    bot.answer_callback_query(call.id)


# main def
def helper(message):
    bot.send_message(message.chat.id, '–¢—É—Ç –∫–∞–∫–æ–π-—Ç–æ –ø–æ–º–æ—à–Ω–∏–∫', reply_markup=main_keyboard)


def find_people(message):
    bot.send_message(message.chat.id, '–ú–µ–¥–ª–µ–Ω–Ω–æ –∏—â—É', reply_markup=chat_keyboard)
